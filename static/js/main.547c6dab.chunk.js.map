{"version":3,"sources":["App.tsx","index.tsx","theme.ts"],"names":["Wrapper","styled","motion","div","Grid","Box","Circle","Overlay","SwitchBtn","button","boxVariants","hover","n","scale","transformOrigin","App","useState","btnClicked","setBtnClicked","id","setId","map","custom","onClick","layoutId","variants","whileHover","AnimatePresence","initial","backgroundColor","animate","exit","style","prev","color","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","theme","document","getElementById"],"mappings":"uOAKMA,EAAUC,YAAOC,IAAOC,IAAdF,CAAH,0PASPG,EAAOH,IAAOE,IAAV,sIAMJE,EAAMJ,YAAOC,IAAOC,IAAdF,CAAH,0SAUHK,EAASL,YAAOC,IAAOC,IAAdF,CAAH,2MAONM,EAAUN,YAAOC,IAAOC,IAAdF,CAAH,mLASPO,EAAYP,YAAOC,IAAOO,OAAdR,CAAH,+SAYTS,EAAc,CAChBC,MAAO,SAACC,GAAD,MAAgB,CACnBC,MAAO,IACPC,gBAAuB,MAANF,EAAY,eAAiB,cA6DvCG,I,EAAAA,EAzDf,WACI,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoBF,mBAAS,IAA7B,mBAAOG,EAAP,KAAWC,EAAX,KAGA,OACI,eAACpB,EAAD,WACI,cAACI,EAAD,UACK,CAAC,IAAK,IAAK,IAAK,KAAKiB,KAAI,SAAAT,GAAC,MACjB,MAANA,GAAmB,MAANA,EACT,cAACP,EAAD,CACIiB,OAAQV,EACRW,QAAS,kBAAMH,EAAMR,IAErBY,SAAUZ,EACVa,SAAUf,EACVgB,WAAW,SAHNd,GAKH,MAANA,EACA,cAACP,EAAD,UACMY,EAA4C,KAA/B,cAACX,EAAD,CAAQkB,SAAS,YAD1BZ,GAIV,cAACP,EAAD,UACKY,EAAa,cAACX,EAAD,CAAQkB,SAAS,WAAc,MADvCZ,QAMtB,cAACe,EAAA,EAAD,UACKR,EACG,cAACZ,EAAD,CACIgB,QAAS,kBAAMH,EAAM,KACrBQ,QAAS,CAAEC,gBAAiB,oBAC5BC,QAAS,CAAED,gBAAiB,sBAC5BE,KAAM,CAAEF,gBAAiB,oBAJ7B,SAMI,cAACxB,EAAD,CACImB,SAAUL,EACVa,MAAO,CAAEH,gBAAiB,2BAGlC,OAER,cAACrB,EAAD,CACIe,QA1CM,kBAAML,GAAc,SAAAe,GAAI,OAAKA,MA2CnCD,MAAO,CACHE,MAAOjB,EAAa,mBAAqB,kBACzCJ,MAAOI,EAAa,IAAM,GAJlC,wBCtGNkB,EAAcC,YAAH,i3CA+DjBC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,eAAC,IAAD,CAAeC,MCvEY,GDuE3B,UACI,cAACL,EAAD,IACA,cAAC,EAAD,WAIZM,SAASC,eAAe,W","file":"static/js/main.547c6dab.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { RecoilBridge } from \"recoil\";\n\nconst Wrapper = styled(motion.div)`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background: linear-gradient(135deg, rgb(238, 0, 153), rgb(221, 0, 238));\n`;\nconst Grid = styled.div`\n    display: grid;\n    gap: 20px;\n    grid-template-columns: repeat(2, 1fr);\n    margin-bottom: 30px;\n`;\nconst Box = styled(motion.div)`\n    width: 350px;\n    height: 200px;\n    background-color: rgba(255, 255, 255, 0.5);\n    border-radius: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\n`;\nconst Circle = styled(motion.div)`\n    background-color: #00a5ff;\n    height: 50px;\n    width: 50px;\n    border-radius: 25px;\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\n`;\nconst Overlay = styled(motion.div)`\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\nconst SwitchBtn = styled(motion.button)`\n    background-color: white;\n    color: rgb(171, 70, 210);\n    font-size: 20px;\n    font-weight: bold;\n    border: 0;\n    padding: 5px 20px;\n    border-radius: 8px;\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\n    transition: 0.5s;\n`;\n\nconst boxVariants = {\n    hover: (n: string) => ({\n        scale: 1.2,\n        transformOrigin: n === \"1\" ? \"bottom right\" : \"top left\"\n    })\n};\n\nfunction App() {\n    const [btnClicked, setBtnClicked] = useState(false);\n    const [id, setId] = useState(\"\");\n    const btnToggle = () => setBtnClicked(prev => !prev);\n\n    return (\n        <Wrapper>\n            <Grid>\n                {[\"1\", \"2\", \"3\", \"4\"].map(n =>\n                    n === \"1\" || n === \"4\" ? (\n                        <Box\n                            custom={n}\n                            onClick={() => setId(n)}\n                            key={n}\n                            layoutId={n}\n                            variants={boxVariants}\n                            whileHover=\"hover\"\n                        ></Box>\n                    ) : n === \"2\" ? (\n                        <Box key={n}>\n                            {!btnClicked ? <Circle layoutId=\"circle\" /> : null}\n                        </Box>\n                    ) : (\n                        <Box key={n}>\n                            {btnClicked ? <Circle layoutId=\"circle\" /> : null}\n                        </Box>\n                    )\n                )}\n            </Grid>\n            <AnimatePresence>\n                {id ? (\n                    <Overlay\n                        onClick={() => setId(\"\")}\n                        initial={{ backgroundColor: \"rgba(0, 0, 0, 0)\" }}\n                        animate={{ backgroundColor: \"rgba(0, 0, 0, 0.7)\" }}\n                        exit={{ backgroundColor: \"rgba(0, 0, 0, 0)\" }}\n                    >\n                        <Box\n                            layoutId={id}\n                            style={{ backgroundColor: \"rgba(255,255,255,1)\" }}\n                        ></Box>\n                    </Overlay>\n                ) : null}\n            </AnimatePresence>\n            <SwitchBtn\n                onClick={btnToggle}\n                style={{\n                    color: btnClicked ? \"rgb(255,111,181)\" : \"rgb(171,70,210)\",\n                    scale: btnClicked ? 1.2 : 1\n                }}\n            >\n                Switch\n            </SwitchBtn>\n        </Wrapper>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { darkTheme } from \"./theme\";\n\nconst GlobalStyle = createGlobalStyle`\n  html, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  color:black;\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color: inherit;\n  }\n`;\n\nReactDOM.render(\n    <React.StrictMode>\n        <RecoilRoot>\n            <ThemeProvider theme={darkTheme}>\n                <GlobalStyle />\n                <App />\n            </ThemeProvider>\n        </RecoilRoot>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {};\n"],"sourceRoot":""}